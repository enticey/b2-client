Project:
    ☐ Support Isahc
    ☐ Work with B2 metadata headers
    ☐ Default clients: use low-level libraries (h1, h2, etc.) rather than the libraries built on top of them.
    ☐ Check derived traits on objects - ensure consistency.
    ☐ Wrap surf's Error so our Error<E> can require E: Error.
    ☐ Can I reorder the documentation sections? Place functions first
    ☐ Bucket's fields need to be publicly accessible
    ☐ If we store Bucket instead of bucket_id in relevant objects, we can better validate access to private buckets without making a request to B2. It potentially requires an extra API call to obtain though.
    ☐ We should likely use a type for FileInfo rather than deal with JSON in the public API
    ☐ Efficient byte management in HttpClients.
    ☐ Make non-mocked tests easily reproducible for others and me in the future - move bucket ID, etc. to environment variables, clean up after tests.
    ☐ Allow uploads via streams/chunked/buffers/local filesystem
    ☐ b2_download_file_by_name allows using a DownloadAuthorization for files with prefixes covered by that auth; we should support that too.
    ☐ Check: did I intentionally keep Request in name KeyListRequest when I removed the others? If so, do I still agree?

API:
    ✓ Implement account endpoints @done(2021-10-18 17:20) @project(API)
    ✓ Implement bucket endpoints @done(2021-11-11 19:57) @project(API)
    ☐ Implement file endpoints

    Files:
        ✓ cancel_large_file @done(2021-11-16 14:25) @project(API \ Files)
        ✓ copy_file @done(2021-11-18 11:54) @project(API \ Files)
        ✓ copy_part @done(2021-12-21 10:36) @project(API \ Files)
        ✓ delete_file_version @done(2022-01-04 10:11) @project(API \ Files)
        ✓ download_file_by_id @done(2022-01-12 16:50) @project(API \ Files)
        ✓ download_file_by_name @done(2022-01-12 16:50) @project(API \ Files)
        ✓ finish_large_file @done(2021-12-17 10:21) @project(API \ Files)
        ✓ get_file_info @done(2022-02-01 13:23) @project(API \ Files)
        ✓ get_upload_part_url @done(2021-12-17 10:21) @project(API \ Files)
        ✓ get_upload_url @done(2021-12-21 11:48) @project(API \ Files)
        ✓ hide_file @done(2022-02-01 14:18) @project(API \ Files)
        ✓ list_file_names @done(2022-02-03 14:24) @project(API \ Files)
        ✓ list_file_versions @done(2022-02-03 15:41) @project(API \ Files)
        ✓ list_parts @done(2022-02-03 17:49) @project(API \ Files)
        ✓ list_unfinished_large_files @done(2022-02-04 12:37) @project(API \ Files)
        ✓ start_large_file @done(2021-11-16 14:25) @project(API \ Files)
        ☐ update_file_legal_hold
        ☐ update_file_retention
        ✓ upload_file @done(2021-12-30 12:41) @project(API \ Files)
        ✓ upload_part @done(2021-12-17 10:21) @project(API \ Files)

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
    ✓ Document API differences from upstream and reasons for doing so. @done(2022-01-14 13:37) @project(Project)
    ✓ I have DateTime<Local> and DateTime<Utc> objects; check whether they're correct or should be changed @done(2022-01-27 08:25) @project(Project)
    ✓ Percent-encode X-Bz-File-Name and X-Bz-Info-* headers @done(2022-01-14 14:05) @project(Project)
    ✓ Use add_opt_header for upload_file @done(2022-01-13 08:10) @project(Project)
    ✓ Allow (require?) setting user-agent @done(2022-01-13 12:50) @project(Project)
    ✓ serde: skip serializing optional fields when None on pretty much everything. @done(2022-01-14 10:23) @project(Project)
    ✓ create_bucket @done(2021-11-01 09:48) @project(API \ Buckets)
    ✓ delete_bucket @done(2021-11-01 10:58) @project(API \ Buckets)
    ✓ list_buckets @done(2021-11-11 08:31) @project(API \ Buckets)
    ✓ update_bucket @done(2021-11-11 19:57) @project(API \ Buckets)
    ✓ Fix stack overflow on error. @done(2021-10-18 21:10) @project(Project \ Maybe Upstream)
    ✓ authorize_account @done(2021-10-13 15:01) @project(API \ Account)
    ✓ create_key @done(2021-10-14 14:55) @project(API \ Account)
    ✓ delete_key @done(2021-10-14 20:53) @project(API \ Account)
    ✓ get_download_authorization @done(2021-10-15 19:02) @project(API \ Account)
    ✓ list_keys @done(2021-10-18 17:18) @project(API \ Account)
    ✓ Support arbitrary backends @done(2021-10-17 10:00) @project(Project)
    ✓ Fix feature incompatibility; at least enough to generate documentation for all features @done(2021-10-17 10:05) @project(Project)
    ✓ Add to CI: test with `--no-default-features` @done(2021-10-17 10:24) @project(Project)
    ✓ Add to CI: build with `--no-default-features --features=with_hyper` @done(2021-10-17 10:24) @project(Project)
    ✓ Add readme/other docs @done(2021-10-13 16:14) @project(Project)
    ✓ Review/update generated docs @done(2021-10-13 16:22) @project(Project \ Public Repos)
    ✓ Set up issue tracker @done(2021-10-14 16:47) @project(Project \ Public Repos)
    ✓ Sync to Github, SourceHut @done(2021-10-14 17:31) @project(Project \ Public Repos)
    ✓ Add CI - stable and nightly Rust @done(2021-10-14 16:31) @project(Project \ Public Repos)
    ✘ Remove with_surf as default feature; require choice of backend @cancelled(2021-10-13 16:06) @project(Project \ Public Repos)
    ✓ Run clippy, fix warnings @done(2021-10-13 16:01) @project(Project \ Public Repos)
    ✓ Add license file, notifications to source files. @done(2021-10-13 15:54) @project(Project \ Public Repos)
    ✓ README @done(2021-10-13 15:52) @project(Project \ Public Repos)
    ✓ README: Link to public mailbox @done(2021-10-13 15:52) @project(Project \ Public Repos)
    ✓ Add contributing file @done(2021-10-13 15:52) @project(Project \ Public Repos)
    ✓ Wrap HTTP clients @done(2021-10-12 11:30) @project(Project)
    ✓ Remove with_ prefixes from builder methods @done(2021-10-28 11:34) @project(Project)
    ✓ Probably add builder() associated function to types that have one. Ensure consistent APIS. @done(2021-10-28 11:34) @project(Project)
    ✓ Impl From<B2Error> for Error to reduce boilerplate in API functions @done(2021-11-16 15:36) @project(Project)
